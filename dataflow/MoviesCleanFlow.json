{
	"name": "MoviesCleanFlow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "MoviesCSV",
						"type": "DatasetReference"
					},
					"name": "Movies"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "OutputCSV_dataflow",
						"type": "DatasetReference"
					},
					"name": "MoviesClean"
				},
				{
					"dataset": {
						"referenceName": "OutputCSV_dataflow",
						"type": "DatasetReference"
					},
					"name": "MoviesByYear"
				}
			],
			"transformations": [
				{
					"name": "YearExtraction"
				},
				{
					"name": "MoviesByYearAgregation"
				}
			],
			"scriptLines": [
				"source(output(",
				"          movieId as string,",
				"          title as string,",
				"          genres as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Movies",
				"Movies derive(Year = toInteger(trim(right(title, 6), '()')),",
				"          title = toString(left(title, length(title)-6)),",
				"     partitionBy('hash', 1)) ~> YearExtraction",
				"YearExtraction aggregate(groupBy(Year),",
				"     MoviesCount = count(),",
				"     partitionBy('hash', 1)) ~> MoviesByYearAgregation",
				"YearExtraction sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['movies-clean.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> MoviesClean",
				"MoviesByYearAgregation sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['moviesByYear.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> MoviesByYear"
			]
		}
	}
}